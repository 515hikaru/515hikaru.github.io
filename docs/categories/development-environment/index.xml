<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development Environment on i was perfect</title>
    <link>/categories/development-environment/</link>
    <description>Recent content in Development Environment on i was perfect</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 11 Apr 2018 23:34:30 +0900</lastBuildDate>
    
	<atom:link href="/categories/development-environment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dockerってべんり</title>
      <link>/post/2018/04/12/docker-is-useful/</link>
      <pubDate>Wed, 11 Apr 2018 23:34:30 +0900</pubDate>
      
      <guid>/post/2018/04/12/docker-is-useful/</guid>
      <description>この記事は何かの解説、というよりは最近の感想である。
やっと Docker って便利だなと思えるようになってきた。一年近く前から Docker を避けるようになり、最近業務の都合で(上司が採用したから!)Dockerを使うことになったのだが、きちんとお膳立てされていている状態で使い始めればそんなに厄介なものでもないな、と思い始めた。そんなにすごい使い方はしていないが。
よいところ 実行環境の用意のしやすさ DBに格納されたデータを取得して整形するメソッドを実装したので、当然テストしたいわけだが、単体テストはともかく結合テストが厄介。あらかじめ DB を用意する必要がある。
しかし、手動でいいのであれば1、下記のようなコマンドを事前に叩いておけば DB が自動で立ち上がる(例では MongoDB を利用)。
$ docker run -p 27017:27017 mongo:3.4  この 1 コマンドでアプリケーションと MongoDB の結合テストを実施することが可能になる2。
はやい はやい。開発環境として使うなら Vagrant のほうが好きな僕だけど、このはやさだけは Docker の(ひいてはコンテナ技術の)圧勝だ。長い Dockerfile のビルドもキャッシュを使えばわりと一瞬だし、止める、消す、再度生成するなど何度も繰り返す処理がはやいので、ストレスがない。空き時間にお菓子を食べすぎてしまうこともない。
結局最近 Vagrant を使っていない3のはこのはやさのせいだと言っても過言ではない。
よくないところ 難しい コンテナ技術のことをよく知らないので、雑いことしか言えないのだけど、普通に Docker は難しいと思う。特に Linux に不慣れな人は悪戦苦闘しながら利用していたりする。
個人的にはエンジニアでさえそうなのだから、非エンジニアの方々の PC でアプリケーションを動かしてもらうときに、非エンジニアの方々の PC に Docker をインストールするのとかどうなのよ? とか思ってしまう。が一方でそこで Docker を使わないともっと面倒くさいとかいう現象も発生しそう4なので一概には言えなかったりする。
やっぱりよくわかんない 一年前の記憶だが、 Docker にはかなり苦しめられた記憶がある。主に docker-compose がわからなかったせいなのだが。今ではあまりそう思わないが、当時は Docker 使うとここまで大変になるなら、ホストにきちんとインストールしたほうがよくない? と思ったものだ。
その時の記憶や経験が完全に払拭されたわけではない5。だから「よくわからないから避けたい」という気持ちもまだある。しかしこれも経験の1つかと諦めてもいる。
今後の活用の模索 最近は個人でも Docker を使おうかと少し考え始めている。例えば、Haskell のインタプリタを利用するのに Docker Hub からダウンロードしたイメージを利用した。</description>
    </item>
    
  </channel>
</rss>