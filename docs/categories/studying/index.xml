<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Studying on i was perfect</title>
    <link>/categories/studying/</link>
    <description>Recent content in Studying on i was perfect</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 29 Apr 2018 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="/categories/studying/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Haskell-jp もくもく会で勉強したことメモ</title>
      <link>/post/2018/04/29/hasmoku-learning-things/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0900</pubDate>
      
      <guid>/post/2018/04/29/hasmoku-learning-things/</guid>
      <description>Haskell-jp もくもく会に参加してきた。
そこで勉強したメモ書きをここにあげておく。ちなみに読んでいた本は『Haskell入門』
FizzBuzz 条件分岐とかガード節とか case 文とかの確認に FizzBuzz をとりあえず書いた。2 章を読んでいると永遠に進めない気がした、という気持ちになったのでこれを書くことで文法を完全に理解したと思い込むことにした。
実際にはもちろんちょいちょい 2 章も参照しつつ進めました。
-- FizzBuzz import Control.Monad -- use forM fizzBuzz :: Int -&amp;gt; String fizzBuzz x = case x of n | n `mod` 15 == 0 -&amp;gt; &amp;quot;FizzBuzz&amp;quot; | n `mod` 5 == 0 -&amp;gt; &amp;quot;Buzz&amp;quot; | n `mod` 3 == 0 -&amp;gt; &amp;quot;Fizz&amp;quot; | otherwise -&amp;gt; show n doFizzBuzz :: [Int] -&amp;gt; [String] doFizzBuzz xs = [fizzBuzz x | x &amp;lt;- xs] main :: IO[()] main = forM (doFizzBuzz [1.</description>
    </item>
    
  </channel>
</rss>